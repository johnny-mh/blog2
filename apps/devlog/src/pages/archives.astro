---
import { getPosts } from '#/collection'
import Layout from '#/layouts/Layout.astro'

const posts = await getPosts()

const categories = [
  ...posts.reduce((map, { rendered: { remarkPluginFrontmatter } }) => {
    remarkPluginFrontmatter.categories?.forEach((cat) => {
      map.set(cat, (map.get(cat) ?? 0) + 1)
    })
    return map
  }, new Map<string, number>()),
]

const tags = [
  ...posts.reduce((map, { rendered: { remarkPluginFrontmatter } }) => {
    remarkPluginFrontmatter.tags?.forEach((tag) => {
      map.set(tag, (map.get(tag) ?? 0) + 1)
    })
    return map
  }, new Map<string, number>()),
]

const groups = [
  ...posts.reduce((map, data) => {
    const {
      rendered: { remarkPluginFrontmatter },
    } = data
    const [, year] = remarkPluginFrontmatter.createdAt.match(/^(\d{4})/)

    map.set(year, [...(map.get(year) ?? []), data])

    return map
  }, new Map<string, Array<(typeof posts)[number]>>()),
]
---

<Layout>
  <section class="section">
    <h2>By Categories</h2>
    <ul class="tagcloud">
      {
        categories.map(([name, cnt]) => (
          <li
            style={{
              fontSize: cnt >= 9 ? '1.8em' : cnt >= 5 ? '1.4em' : '1em',
            }}
          >
            <a href={`/post/category/${name}/1`}>{name}</a>
          </li>
        ))
      }
    </ul>
  </section>
  <section class="section">
    <h2>By Tags</h2>
    <ul class="tagcloud">
      {
        tags.map(([name, cnt]) => (
          <li
            style={{
              fontSize: cnt >= 9 ? '1.8em' : cnt >= 5 ? '1.4em' : '1em',
            }}
          >
            <a href={`/post/tag/${name}/1`}>{name}</a>
          </li>
        ))
      }
    </ul>
  </section>
  <section class="section">
    <h2>Archives</h2>
    <ul class="archives">
      {
        groups.map(([year, posts]) => (
          <li class="archive-list">
            <span class="group-name">
              {year} ({posts.length})
            </span>
            <ul class="archive-list-items">
              {posts.map((post) => (
                <li>
                  <a href={`/post/${post.path}`}>
                    {post.rendered.remarkPluginFrontmatter.title}
                  </a>
                  <span>{post.rendered.remarkPluginFrontmatter.createdAt}</span>
                </li>
              ))}
            </ul>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>

<style lang="scss">
  @use '../styles/variables' as *;
  @use '../styles/mixins' as *;

  .section {
    padding-bottom: 2rem;
    margin-bottom: 2rem;
    border-bottom: 1px solid $theme-light-border;

    @include dark {
      border-bottom-color: $theme-dark-border;
    }

    &:last-of-type {
      border-bottom: none;
    }
  }

  .tagcloud {
    margin: 0;
    padding: 1rem;

    li {
      display: inline-block;
      line-height: 1em;
      margin: 0.25em 0.5em;

      a {
        @include link;
      }
    }
  }

  .archives {
    padding: 0 1rem 0 1rem;
    columns: 250px;
    column-gap: 60px;
    -moz-columns: 250px;
    -moz-column-gap: 60px;
    -webkit-columns: 250px;
    -webkit-column-gap: 60px;

    .group-name {
      font-size: 1.4em;
      line-height: 1.4em;
      display: block;
    }

    .archive-list {
      -webkit-column-break-inside: avoid;
      page-break-inside: avoid;
      break-inside: avoid;
      display: block;
      overflow: hidden;

      .archive-list-items {
        display: block;
        margin: 1.4em 0 2.8em 0;
        font-size: 1em;
        line-height: 1.4em;

        li {
          margin: 0 0 1.4em 0;

          a {
            display: block;
            margin-right: 5px;

            @include link;
          }

          span {
            display: block;
            color: $theme-light-text-secondary;

            @include dark {
              color: $theme-dark-text-secondary;
            }
          }
        }
      }
    }
  }
</style>
