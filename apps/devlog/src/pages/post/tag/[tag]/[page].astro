---
import type { GetStaticPaths } from 'astro'

import { getPosts } from '#/collection'
import Pager from '#/components/Pager.astro'
import PostList from '#/components/PostList.astro'
import Layout from '#/layouts/Layout.astro'

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getPosts()

  const tags = [
    ...posts.reduce(
      (
        map,
        {
          path,
          readingTime,
          rendered: { remarkPluginFrontmatter: frontmatter },
        }
      ) => {
        frontmatter.tags?.forEach((tag) => {
          map.set(tag, [
            ...(map.get(tag) ?? []),
            { ...frontmatter, path, readingTime },
          ])
        })

        return map
      },
      new Map<string, Record<string, any>[]>()
    ),
  ]

  return tags
    .map(([tag, list]) => {
      return paginate(list, {
        pageSize: 10,
        params: { tag },
      })
    })
    .flatMap((arr) => arr)
}) satisfies GetStaticPaths

const { page } = Astro.props
const { tag } = Astro.params
---

<Layout>
  <PostList list={page.data} title={`Tag: ${tag}`} />
  <Pager next={page.url.next} prev={page.url.prev} />
</Layout>
