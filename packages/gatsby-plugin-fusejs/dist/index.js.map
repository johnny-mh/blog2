{
  "version": 3,
  "sources": ["../../../node_modules/fuse.js/dist/fuse.common.js", "../src/index.ts"],
  "sourcesContent": ["/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction isArray(value) {\n  return !Array.isArray ? getTag(value) === '[object Array]' : Array.isArray(value);\n} // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\n\nvar INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n} // Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\n\nfunction isBoolean(value) {\n  return value === true || value === false || isObjectLike(value) && getTag(value) == '[object Boolean]';\n}\nfunction isObject(value) {\n  return _typeof(value) === 'object';\n} // Checks if `value` is object-like.\n\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null;\n}\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\nfunction isBlank(value) {\n  return !value.trim().length;\n} // Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\n\nfunction getTag(value) {\n  return value == null ? value === undefined ? '[object Undefined]' : '[object Null]' : Object.prototype.toString.call(value);\n}\n\nvar EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\nvar INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\nvar LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = function LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key) {\n  return \"Invalid value for key \".concat(key);\n};\nvar PATTERN_LENGTH_TOO_LARGE = function PATTERN_LENGTH_TOO_LARGE(max) {\n  return \"Pattern length exceeds max of \".concat(max, \".\");\n};\nvar MISSING_KEY_PROPERTY = function MISSING_KEY_PROPERTY(name) {\n  return \"Missing \".concat(name, \" property in key\");\n};\nvar INVALID_KEY_WEIGHT_VALUE = function INVALID_KEY_WEIGHT_VALUE(key) {\n  return \"Property 'weight' in key '\".concat(key, \"' must be a positive integer\");\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar KeyStore = /*#__PURE__*/function () {\n  function KeyStore(keys) {\n    var _this = this;\n\n    _classCallCheck(this, KeyStore);\n\n    this._keys = [];\n    this._keyMap = {};\n    var totalWeight = 0;\n    keys.forEach(function (key) {\n      var obj = createKey(key);\n      totalWeight += obj.weight;\n\n      _this._keys.push(obj);\n\n      _this._keyMap[obj.id] = obj;\n      totalWeight += obj.weight;\n    }); // Normalize weights so that their sum is equal to 1\n\n    this._keys.forEach(function (key) {\n      key.weight /= totalWeight;\n    });\n  }\n\n  _createClass(KeyStore, [{\n    key: \"get\",\n    value: function get(keyId) {\n      return this._keyMap[keyId];\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify(this._keys);\n    }\n  }]);\n\n  return KeyStore;\n}();\nfunction createKey(key) {\n  var path = null;\n  var id = null;\n  var src = null;\n  var weight = 1;\n  var getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'));\n    }\n\n    var name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return {\n    path: path,\n    id: id,\n    weight: weight,\n    src: src,\n    getFn: getFn\n  };\n}\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.');\n}\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key;\n}\n\nfunction get(obj, path) {\n  var list = [];\n  var arr = false;\n\n  var deepGet = function deepGet(obj, path, index) {\n    if (!isDefined(obj)) {\n      return;\n    }\n\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      var key = path[index];\n      var value = obj[key];\n\n      if (!isDefined(value)) {\n        return;\n      } // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n\n\n      if (index === path.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true; // Search each item in the array.\n\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  }; // Backwards compatibility (since path used to be a string)\n\n\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n  return arr ? list : list[0];\n}\n\nvar MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\nvar BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: function sortFn(a, b) {\n    return a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1;\n  }\n};\nvar FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\nvar AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\nvar Config = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, BasicOptions), MatchOptions), FuzzyOptions), AdvancedOptions);\n\nvar SPACE = /[^ ]+/g; // Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\n\nfunction norm() {\n  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var mantissa = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  var cache = new Map();\n  var m = Math.pow(10, mantissa);\n  return {\n    get: function get(value) {\n      var numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens);\n      } // Default function is 1/sqrt(x), weight makes that variable\n\n\n      var norm = 1 / Math.pow(numTokens, 0.5 * weight); // In place of `toFixed(mantissa)`, for faster computation\n\n      var n = parseFloat(Math.round(norm * m) / m);\n      cache.set(numTokens, n);\n      return n;\n    },\n    clear: function clear() {\n      cache.clear();\n    }\n  };\n}\n\nvar FuseIndex = /*#__PURE__*/function () {\n  function FuseIndex() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === void 0 ? Config.getFn : _ref$getFn,\n        _ref$fieldNormWeight = _ref.fieldNormWeight,\n        fieldNormWeight = _ref$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref$fieldNormWeight;\n\n    _classCallCheck(this, FuseIndex);\n\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n    this.setIndexRecords();\n  }\n\n  _createClass(FuseIndex, [{\n    key: \"setSources\",\n    value: function setSources() {\n      var docs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.docs = docs;\n    }\n  }, {\n    key: \"setIndexRecords\",\n    value: function setIndexRecords() {\n      var records = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.records = records;\n    }\n  }, {\n    key: \"setKeys\",\n    value: function setKeys() {\n      var _this = this;\n\n      var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.keys = keys;\n      this._keysMap = {};\n      keys.forEach(function (key, idx) {\n        _this._keysMap[key.id] = idx;\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this2 = this;\n\n      if (this.isCreated || !this.docs.length) {\n        return;\n      }\n\n      this.isCreated = true; // List is Array<String>\n\n      if (isString(this.docs[0])) {\n        this.docs.forEach(function (doc, docIndex) {\n          _this2._addString(doc, docIndex);\n        });\n      } else {\n        // List is Array<Object>\n        this.docs.forEach(function (doc, docIndex) {\n          _this2._addObject(doc, docIndex);\n        });\n      }\n\n      this.norm.clear();\n    } // Adds a doc to the end of the index\n\n  }, {\n    key: \"add\",\n    value: function add(doc) {\n      var idx = this.size();\n\n      if (isString(doc)) {\n        this._addString(doc, idx);\n      } else {\n        this._addObject(doc, idx);\n      }\n    } // Removes the doc at the specified index of the index\n\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(idx) {\n      this.records.splice(idx, 1); // Change ref index of every subsquent doc\n\n      for (var i = idx, len = this.size(); i < len; i += 1) {\n        this.records[i].i -= 1;\n      }\n    }\n  }, {\n    key: \"getValueForItemAtKeyId\",\n    value: function getValueForItemAtKeyId(item, keyId) {\n      return item[this._keysMap[keyId]];\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.records.length;\n    }\n  }, {\n    key: \"_addString\",\n    value: function _addString(doc, docIndex) {\n      if (!isDefined(doc) || isBlank(doc)) {\n        return;\n      }\n\n      var record = {\n        v: doc,\n        i: docIndex,\n        n: this.norm.get(doc)\n      };\n      this.records.push(record);\n    }\n  }, {\n    key: \"_addObject\",\n    value: function _addObject(doc, docIndex) {\n      var _this3 = this;\n\n      var record = {\n        i: docIndex,\n        $: {}\n      }; // Iterate over every key (i.e, path), and fetch the value at that key\n\n      this.keys.forEach(function (key, keyIndex) {\n        var value = key.getFn ? key.getFn(doc) : _this3.getFn(doc, key.path);\n\n        if (!isDefined(value)) {\n          return;\n        }\n\n        if (isArray(value)) {\n          (function () {\n            var subRecords = [];\n            var stack = [{\n              nestedArrIndex: -1,\n              value: value\n            }];\n\n            while (stack.length) {\n              var _stack$pop = stack.pop(),\n                  nestedArrIndex = _stack$pop.nestedArrIndex,\n                  _value = _stack$pop.value;\n\n              if (!isDefined(_value)) {\n                continue;\n              }\n\n              if (isString(_value) && !isBlank(_value)) {\n                var subRecord = {\n                  v: _value,\n                  i: nestedArrIndex,\n                  n: _this3.norm.get(_value)\n                };\n                subRecords.push(subRecord);\n              } else if (isArray(_value)) {\n                _value.forEach(function (item, k) {\n                  stack.push({\n                    nestedArrIndex: k,\n                    value: item\n                  });\n                });\n              } else ;\n            }\n\n            record.$[keyIndex] = subRecords;\n          })();\n        } else if (isString(value) && !isBlank(value)) {\n          var subRecord = {\n            v: value,\n            n: _this3.norm.get(value)\n          };\n          record.$[keyIndex] = subRecord;\n        }\n      });\n      this.records.push(record);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        keys: this.keys,\n        records: this.records\n      };\n    }\n  }]);\n\n  return FuseIndex;\n}();\nfunction createIndex(keys, docs) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$getFn = _ref2.getFn,\n      getFn = _ref2$getFn === void 0 ? Config.getFn : _ref2$getFn,\n      _ref2$fieldNormWeight = _ref2.fieldNormWeight,\n      fieldNormWeight = _ref2$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref2$fieldNormWeight;\n\n  var myIndex = new FuseIndex({\n    getFn: getFn,\n    fieldNormWeight: fieldNormWeight\n  });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex;\n}\nfunction parseIndex(data) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$getFn = _ref3.getFn,\n      getFn = _ref3$getFn === void 0 ? Config.getFn : _ref3$getFn,\n      _ref3$fieldNormWeight = _ref3.fieldNormWeight,\n      fieldNormWeight = _ref3$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref3$fieldNormWeight;\n\n  var keys = data.keys,\n      records = data.records;\n  var myIndex = new FuseIndex({\n    getFn: getFn,\n    fieldNormWeight: fieldNormWeight\n  });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex;\n}\n\nfunction computeScore$1(pattern) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === void 0 ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === void 0 ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n      _ref$ignoreLocation = _ref.ignoreLocation,\n      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n  var accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy;\n  }\n\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n}\n\nfunction convertMaskToIndices() {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config.minMatchCharLength;\n  var indices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n\n      start = -1;\n    }\n  } // (i-1 - start) + 1 => i - start\n\n\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices;\n}\n\n// Machine word size\nvar MAX_BITS = 32;\n\nfunction search(text, pattern, patternAlphabet) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$location = _ref.location,\n      location = _ref$location === void 0 ? Config.location : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n      _ref$includeMatches = _ref.includeMatches,\n      includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n      _ref$ignoreLocation = _ref.ignoreLocation,\n      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));\n  }\n\n  var patternLen = pattern.length; // Set starting location at beginning text and initialize the alphabet.\n\n  var textLen = text.length; // Handle the case when location > text.length\n\n  var expectedLocation = Math.max(0, Math.min(location, textLen)); // Highest score beyond which we give up.\n\n  var currentThreshold = threshold; // Is there a nearby exact match? (speedup)\n\n  var bestLocation = expectedLocation; // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n\n  var computeMatches = minMatchCharLength > 1 || includeMatches; // A mask of the matches, used for building the indices\n\n  var matchMask = computeMatches ? Array(textLen) : [];\n  var index; // Get all exact matches, here for speed up\n\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    var score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation: expectedLocation,\n      distance: distance,\n      ignoreLocation: ignoreLocation\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      var i = 0;\n\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  } // Reset the best location\n\n\n  bestLocation = -1;\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score2 = computeScore$1(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance,\n        ignoreLocation: ignoreLocation\n      });\n\n      if (_score2 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    } // Use the result from this iteration as the maximum for the next.\n\n\n    binMax = binMid;\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen; // Initialize the bit array\n\n    var bitArr = Array(finish + 2);\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      } // First pass: exact match\n\n\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch; // Subsequent passes: fuzzy match\n\n      if (_i) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance,\n          ignoreLocation: ignoreLocation\n        }); // This match will almost certainly be better than any existing match.\n        // But check anyway.\n\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation; // Already passed `loc`, downhill from here on in.\n\n          if (bestLocation <= expectedLocation) {\n            break;\n          } // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n\n\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    } // No hope for a (better) match at greater error levels.\n\n\n    var _score = computeScore$1(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance,\n      ignoreLocation: ignoreLocation\n    });\n\n    if (_score > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  var result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    var indices = convertMaskToIndices(matchMask, minMatchCharLength);\n\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result;\n}\n\nfunction createPatternAlphabet(pattern) {\n  var mask = {};\n\n  for (var i = 0, len = pattern.length; i < len; i += 1) {\n    var _char = pattern.charAt(i);\n\n    mask[_char] = (mask[_char] || 0) | 1 << len - i - 1;\n  }\n\n  return mask;\n}\n\nvar BitapSearch = /*#__PURE__*/function () {\n  function BitapSearch(pattern) {\n    var _this = this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n    _classCallCheck(this, BitapSearch);\n\n    this.options = {\n      location: location,\n      threshold: threshold,\n      distance: distance,\n      includeMatches: includeMatches,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      isCaseSensitive: isCaseSensitive,\n      ignoreLocation: ignoreLocation\n    };\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return;\n    }\n\n    var addChunk = function addChunk(pattern, startIndex) {\n      _this.chunks.push({\n        pattern: pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex: startIndex\n      });\n    };\n\n    var len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      var i = 0;\n      var remainder = len % MAX_BITS;\n      var end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        var startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  _createClass(BitapSearch, [{\n    key: \"searchIn\",\n    value: function searchIn(text) {\n      var _this$options = this.options,\n          isCaseSensitive = _this$options.isCaseSensitive,\n          includeMatches = _this$options.includeMatches;\n\n      if (!isCaseSensitive) {\n        text = text.toLowerCase();\n      } // Exact match\n\n\n      if (this.pattern === text) {\n        var _result = {\n          isMatch: true,\n          score: 0\n        };\n\n        if (includeMatches) {\n          _result.indices = [[0, text.length - 1]];\n        }\n\n        return _result;\n      } // Otherwise, use Bitap algorithm\n\n\n      var _this$options2 = this.options,\n          location = _this$options2.location,\n          distance = _this$options2.distance,\n          threshold = _this$options2.threshold,\n          findAllMatches = _this$options2.findAllMatches,\n          minMatchCharLength = _this$options2.minMatchCharLength,\n          ignoreLocation = _this$options2.ignoreLocation;\n      var allIndices = [];\n      var totalScore = 0;\n      var hasMatches = false;\n      this.chunks.forEach(function (_ref2) {\n        var pattern = _ref2.pattern,\n            alphabet = _ref2.alphabet,\n            startIndex = _ref2.startIndex;\n\n        var _search = search(text, pattern, alphabet, {\n          location: location + startIndex,\n          distance: distance,\n          threshold: threshold,\n          findAllMatches: findAllMatches,\n          minMatchCharLength: minMatchCharLength,\n          includeMatches: includeMatches,\n          ignoreLocation: ignoreLocation\n        }),\n            isMatch = _search.isMatch,\n            score = _search.score,\n            indices = _search.indices;\n\n        if (isMatch) {\n          hasMatches = true;\n        }\n\n        totalScore += score;\n\n        if (isMatch && indices) {\n          allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));\n        }\n      });\n      var result = {\n        isMatch: hasMatches,\n        score: hasMatches ? totalScore / this.chunks.length : 1\n      };\n\n      if (hasMatches && includeMatches) {\n        result.indices = allIndices;\n      }\n\n      return result;\n    }\n  }]);\n\n  return BitapSearch;\n}();\n\nvar BaseMatch = /*#__PURE__*/function () {\n  function BaseMatch(pattern) {\n    _classCallCheck(this, BaseMatch);\n\n    this.pattern = pattern;\n  }\n\n  _createClass(BaseMatch, [{\n    key: \"search\",\n    value: function\n      /*text*/\n    search() {}\n  }], [{\n    key: \"isMultiMatch\",\n    value: function isMultiMatch(pattern) {\n      return getMatch(pattern, this.multiRegex);\n    }\n  }, {\n    key: \"isSingleMatch\",\n    value: function isSingleMatch(pattern) {\n      return getMatch(pattern, this.singleRegex);\n    }\n  }]);\n\n  return BaseMatch;\n}();\n\nfunction getMatch(pattern, exp) {\n  var matches = pattern.match(exp);\n  return matches ? matches[1] : null;\n}\n\nvar ExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(ExactMatch, _BaseMatch);\n\n  var _super = _createSuper(ExactMatch);\n\n  function ExactMatch(pattern) {\n    _classCallCheck(this, ExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(ExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text === this.pattern;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^=\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^=(.*)$/;\n    }\n  }]);\n\n  return ExactMatch;\n}(BaseMatch);\n\nvar InverseExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InverseExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InverseExactMatch);\n\n  function InverseExactMatch(pattern) {\n    _classCallCheck(this, InverseExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InverseExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var index = text.indexOf(this.pattern);\n      var isMatch = index === -1;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!(.*)$/;\n    }\n  }]);\n\n  return InverseExactMatch;\n}(BaseMatch);\n\nvar PrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(PrefixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(PrefixExactMatch);\n\n  function PrefixExactMatch(pattern) {\n    _classCallCheck(this, PrefixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(PrefixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text.startsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, this.pattern.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'prefix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\\^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^\\^(.*)$/;\n    }\n  }]);\n\n  return PrefixExactMatch;\n}(BaseMatch);\n\nvar InversePrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InversePrefixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InversePrefixExactMatch);\n\n  function InversePrefixExactMatch(pattern) {\n    _classCallCheck(this, InversePrefixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InversePrefixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = !text.startsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-prefix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\\^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!\\^(.*)$/;\n    }\n  }]);\n\n  return InversePrefixExactMatch;\n}(BaseMatch);\n\nvar SuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(SuffixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(SuffixExactMatch);\n\n  function SuffixExactMatch(pattern) {\n    _classCallCheck(this, SuffixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(SuffixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = text.endsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [text.length - this.pattern.length, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'suffix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\"(.*)\"\\$$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^(.*)\\$$/;\n    }\n  }]);\n\n  return SuffixExactMatch;\n}(BaseMatch);\n\nvar InverseSuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(InverseSuffixExactMatch, _BaseMatch);\n\n  var _super = _createSuper(InverseSuffixExactMatch);\n\n  function InverseSuffixExactMatch(pattern) {\n    _classCallCheck(this, InverseSuffixExactMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(InverseSuffixExactMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var isMatch = !text.endsWith(this.pattern);\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: [0, text.length - 1]\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'inverse-suffix-exact';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^!\"(.*)\"\\$$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^!(.*)\\$$/;\n    }\n  }]);\n\n  return InverseSuffixExactMatch;\n}(BaseMatch);\n\nvar FuzzyMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(FuzzyMatch, _BaseMatch);\n\n  var _super = _createSuper(FuzzyMatch);\n\n  function FuzzyMatch(pattern) {\n    var _this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;\n\n    _classCallCheck(this, FuzzyMatch);\n\n    _this = _super.call(this, pattern);\n    _this._bitapSearch = new BitapSearch(pattern, {\n      location: location,\n      threshold: threshold,\n      distance: distance,\n      includeMatches: includeMatches,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      isCaseSensitive: isCaseSensitive,\n      ignoreLocation: ignoreLocation\n    });\n    return _this;\n  }\n\n  _createClass(FuzzyMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      return this._bitapSearch.searchIn(text);\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'fuzzy';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^(.*)$/;\n    }\n  }]);\n\n  return FuzzyMatch;\n}(BaseMatch);\n\nvar IncludeMatch = /*#__PURE__*/function (_BaseMatch) {\n  _inherits(IncludeMatch, _BaseMatch);\n\n  var _super = _createSuper(IncludeMatch);\n\n  function IncludeMatch(pattern) {\n    _classCallCheck(this, IncludeMatch);\n\n    return _super.call(this, pattern);\n  }\n\n  _createClass(IncludeMatch, [{\n    key: \"search\",\n    value: function search(text) {\n      var location = 0;\n      var index;\n      var indices = [];\n      var patternLen = this.pattern.length; // Get all exact matches\n\n      while ((index = text.indexOf(this.pattern, location)) > -1) {\n        location = index + patternLen;\n        indices.push([index, location - 1]);\n      }\n\n      var isMatch = !!indices.length;\n      return {\n        isMatch: isMatch,\n        score: isMatch ? 0 : 1,\n        indices: indices\n      };\n    }\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return 'include';\n    }\n  }, {\n    key: \"multiRegex\",\n    get: function get() {\n      return /^'\"(.*)\"$/;\n    }\n  }, {\n    key: \"singleRegex\",\n    get: function get() {\n      return /^'(.*)$/;\n    }\n  }]);\n\n  return IncludeMatch;\n}(BaseMatch);\n\nvar searchers = [ExactMatch, IncludeMatch, PrefixExactMatch, InversePrefixExactMatch, InverseSuffixExactMatch, SuffixExactMatch, InverseExactMatch, FuzzyMatch];\nvar searchersLen = searchers.length; // Regex to split by spaces, but keep anything in quotes together\n\nvar SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nvar OR_TOKEN = '|'; // Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\n\nfunction parseQuery(pattern) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return pattern.split(OR_TOKEN).map(function (item) {\n    var query = item.trim().split(SPACE_RE).filter(function (item) {\n      return item && !!item.trim();\n    });\n    var results = [];\n\n    for (var i = 0, len = query.length; i < len; i += 1) {\n      var queryItem = query[i]; // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n\n      var found = false;\n      var idx = -1;\n\n      while (!found && ++idx < searchersLen) {\n        var searcher = searchers[idx];\n        var token = searcher.isMultiMatch(queryItem);\n\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue;\n      } // 2. Handle single query matches (i.e, once that are *not* quoted)\n\n\n      idx = -1;\n\n      while (++idx < searchersLen) {\n        var _searcher = searchers[idx];\n\n        var _token = _searcher.isSingleMatch(queryItem);\n\n        if (_token) {\n          results.push(new _searcher(_token, options));\n          break;\n        }\n      }\n    }\n\n    return results;\n  });\n}\n\n// to a singl match\n\nvar MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\n\nvar ExtendedSearch = /*#__PURE__*/function () {\n  function ExtendedSearch(pattern) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,\n        _ref$ignoreLocation = _ref.ignoreLocation,\n        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,\n        _ref$location = _ref.location,\n        location = _ref$location === void 0 ? Config.location : _ref$location,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === void 0 ? Config.distance : _ref$distance;\n\n    _classCallCheck(this, ExtendedSearch);\n\n    this.query = null;\n    this.options = {\n      isCaseSensitive: isCaseSensitive,\n      includeMatches: includeMatches,\n      minMatchCharLength: minMatchCharLength,\n      findAllMatches: findAllMatches,\n      ignoreLocation: ignoreLocation,\n      location: location,\n      threshold: threshold,\n      distance: distance\n    };\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  _createClass(ExtendedSearch, [{\n    key: \"searchIn\",\n    value: function searchIn(text) {\n      var query = this.query;\n\n      if (!query) {\n        return {\n          isMatch: false,\n          score: 1\n        };\n      }\n\n      var _this$options = this.options,\n          includeMatches = _this$options.includeMatches,\n          isCaseSensitive = _this$options.isCaseSensitive;\n      text = isCaseSensitive ? text : text.toLowerCase();\n      var numMatches = 0;\n      var allIndices = [];\n      var totalScore = 0; // ORs\n\n      for (var i = 0, qLen = query.length; i < qLen; i += 1) {\n        var searchers = query[i]; // Reset indices\n\n        allIndices.length = 0;\n        numMatches = 0; // ANDs\n\n        for (var j = 0, pLen = searchers.length; j < pLen; j += 1) {\n          var searcher = searchers[j];\n\n          var _searcher$search = searcher.search(text),\n              isMatch = _searcher$search.isMatch,\n              indices = _searcher$search.indices,\n              score = _searcher$search.score;\n\n          if (isMatch) {\n            numMatches += 1;\n            totalScore += score;\n\n            if (includeMatches) {\n              var type = searcher.constructor.type;\n\n              if (MultiMatchSet.has(type)) {\n                allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));\n              } else {\n                allIndices.push(indices);\n              }\n            }\n          } else {\n            totalScore = 0;\n            numMatches = 0;\n            allIndices.length = 0;\n            break;\n          }\n        } // OR condition, so if TRUE, return\n\n\n        if (numMatches) {\n          var result = {\n            isMatch: true,\n            score: totalScore / numMatches\n          };\n\n          if (includeMatches) {\n            result.indices = allIndices;\n          }\n\n          return result;\n        }\n      } // Nothing was matched\n\n\n      return {\n        isMatch: false,\n        score: 1\n      };\n    }\n  }], [{\n    key: \"condition\",\n    value: function condition(_, options) {\n      return options.useExtendedSearch;\n    }\n  }]);\n\n  return ExtendedSearch;\n}();\n\nvar registeredSearchers = [];\nfunction register() {\n  registeredSearchers.push.apply(registeredSearchers, arguments);\n}\nfunction createSearcher(pattern, options) {\n  for (var i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    var searcherClass = registeredSearchers[i];\n\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options);\n    }\n  }\n\n  return new BitapSearch(pattern, options);\n}\n\nvar LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\nvar KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nvar isExpression = function isExpression(query) {\n  return !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n};\n\nvar isPath = function isPath(query) {\n  return !!query[KeyType.PATH];\n};\n\nvar isLeaf = function isLeaf(query) {\n  return !isArray(query) && isObject(query) && !isExpression(query);\n};\n\nvar convertToExplicit = function convertToExplicit(query) {\n  return _defineProperty({}, LogicalOperator.AND, Object.keys(query).map(function (key) {\n    return _defineProperty({}, key, query[key]);\n  }));\n}; // When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\n\n\nfunction parse(query, options) {\n  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$auto = _ref3.auto,\n      auto = _ref3$auto === void 0 ? true : _ref3$auto;\n\n  var next = function next(query) {\n    var keys = Object.keys(query);\n    var isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query));\n    }\n\n    if (isLeaf(query)) {\n      var key = isQueryPath ? query[KeyType.PATH] : keys[0];\n      var pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));\n      }\n\n      var obj = {\n        keyId: createKeyId(key),\n        pattern: pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj;\n    }\n\n    var node = {\n      children: [],\n      operator: keys[0]\n    };\n    keys.forEach(function (key) {\n      var value = query[key];\n\n      if (isArray(value)) {\n        value.forEach(function (item) {\n          node.children.push(next(item));\n        });\n      }\n    });\n    return node;\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query);\n}\n\nfunction computeScore(results, _ref) {\n  var _ref$ignoreFieldNorm = _ref.ignoreFieldNorm,\n      ignoreFieldNorm = _ref$ignoreFieldNorm === void 0 ? Config.ignoreFieldNorm : _ref$ignoreFieldNorm;\n  results.forEach(function (result) {\n    var totalScore = 1;\n    result.matches.forEach(function (_ref2) {\n      var key = _ref2.key,\n          norm = _ref2.norm,\n          score = _ref2.score;\n      var weight = key ? key.weight : null;\n      totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm));\n    });\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  var matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return;\n  }\n\n  matches.forEach(function (match) {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return;\n    }\n\n    var indices = match.indices,\n        value = match.value;\n    var obj = {\n      indices: indices,\n      value: value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(results, docs) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$includeMatches = _ref.includeMatches,\n      includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,\n      _ref$includeScore = _ref.includeScore,\n      includeScore = _ref$includeScore === void 0 ? Config.includeScore : _ref$includeScore;\n\n  var transformers = [];\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n  return results.map(function (result) {\n    var idx = result.idx;\n    var data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach(function (transformer) {\n        transformer(result, data);\n      });\n    }\n\n    return data;\n  });\n}\n\nvar Fuse$1 = /*#__PURE__*/function () {\n  function Fuse(docs) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = _objectSpread2(_objectSpread2({}, Config), options);\n\n    if (this.options.useExtendedSearch && !true) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n    this.setCollection(docs, index);\n  }\n\n  _createClass(Fuse, [{\n    key: \"setCollection\",\n    value: function setCollection(docs, index) {\n      this._docs = docs;\n\n      if (index && !(index instanceof FuseIndex)) {\n        throw new Error(INCORRECT_INDEX_TYPE);\n      }\n\n      this._myIndex = index || createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(doc) {\n      if (!isDefined(doc)) {\n        return;\n      }\n\n      this._docs.push(doc);\n\n      this._myIndex.add(doc);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var predicate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function\n        /* doc, idx */\n      () {\n        return false;\n      };\n      var results = [];\n\n      for (var i = 0, len = this._docs.length; i < len; i += 1) {\n        var doc = this._docs[i];\n\n        if (predicate(doc, i)) {\n          this.removeAt(i);\n          i -= 1;\n          len -= 1;\n          results.push(doc);\n        }\n      }\n\n      return results;\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(idx) {\n      this._docs.splice(idx, 1);\n\n      this._myIndex.removeAt(idx);\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex() {\n      return this._myIndex;\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$limit = _ref.limit,\n          limit = _ref$limit === void 0 ? -1 : _ref$limit;\n\n      var _this$options = this.options,\n          includeMatches = _this$options.includeMatches,\n          includeScore = _this$options.includeScore,\n          shouldSort = _this$options.shouldSort,\n          sortFn = _this$options.sortFn,\n          ignoreFieldNorm = _this$options.ignoreFieldNorm;\n      var results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);\n      computeScore(results, {\n        ignoreFieldNorm: ignoreFieldNorm\n      });\n\n      if (shouldSort) {\n        results.sort(sortFn);\n      }\n\n      if (isNumber(limit) && limit > -1) {\n        results = results.slice(0, limit);\n      }\n\n      return format(results, this._docs, {\n        includeMatches: includeMatches,\n        includeScore: includeScore\n      });\n    }\n  }, {\n    key: \"_searchStringList\",\n    value: function _searchStringList(query) {\n      var searcher = createSearcher(query, this.options);\n      var records = this._myIndex.records;\n      var results = []; // Iterate over every string in the index\n\n      records.forEach(function (_ref2) {\n        var text = _ref2.v,\n            idx = _ref2.i,\n            norm = _ref2.n;\n\n        if (!isDefined(text)) {\n          return;\n        }\n\n        var _searcher$searchIn = searcher.searchIn(text),\n            isMatch = _searcher$searchIn.isMatch,\n            score = _searcher$searchIn.score,\n            indices = _searcher$searchIn.indices;\n\n        if (isMatch) {\n          results.push({\n            item: text,\n            idx: idx,\n            matches: [{\n              score: score,\n              value: text,\n              norm: norm,\n              indices: indices\n            }]\n          });\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_searchLogical\",\n    value: function _searchLogical(query) {\n      var _this = this;\n\n      var expression = parse(query, this.options);\n\n      var evaluate = function evaluate(node, item, idx) {\n        if (!node.children) {\n          var keyId = node.keyId,\n              searcher = node.searcher;\n\n          var matches = _this._findMatches({\n            key: _this._keyStore.get(keyId),\n            value: _this._myIndex.getValueForItemAtKeyId(item, keyId),\n            searcher: searcher\n          });\n\n          if (matches && matches.length) {\n            return [{\n              idx: idx,\n              item: item,\n              matches: matches\n            }];\n          }\n\n          return [];\n        }\n\n        var res = [];\n\n        for (var i = 0, len = node.children.length; i < len; i += 1) {\n          var child = node.children[i];\n          var result = evaluate(child, item, idx);\n\n          if (result.length) {\n            res.push.apply(res, _toConsumableArray(result));\n          } else if (node.operator === LogicalOperator.AND) {\n            return [];\n          }\n        }\n\n        return res;\n      };\n\n      var records = this._myIndex.records;\n      var resultMap = {};\n      var results = [];\n      records.forEach(function (_ref3) {\n        var item = _ref3.$,\n            idx = _ref3.i;\n\n        if (isDefined(item)) {\n          var expResults = evaluate(expression, item, idx);\n\n          if (expResults.length) {\n            // Dedupe when adding\n            if (!resultMap[idx]) {\n              resultMap[idx] = {\n                idx: idx,\n                item: item,\n                matches: []\n              };\n              results.push(resultMap[idx]);\n            }\n\n            expResults.forEach(function (_ref4) {\n              var _resultMap$idx$matche;\n\n              var matches = _ref4.matches;\n\n              (_resultMap$idx$matche = resultMap[idx].matches).push.apply(_resultMap$idx$matche, _toConsumableArray(matches));\n            });\n          }\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_searchObjectList\",\n    value: function _searchObjectList(query) {\n      var _this2 = this;\n\n      var searcher = createSearcher(query, this.options);\n      var _this$_myIndex = this._myIndex,\n          keys = _this$_myIndex.keys,\n          records = _this$_myIndex.records;\n      var results = []; // List is Array<Object>\n\n      records.forEach(function (_ref5) {\n        var item = _ref5.$,\n            idx = _ref5.i;\n\n        if (!isDefined(item)) {\n          return;\n        }\n\n        var matches = []; // Iterate over every key (i.e, path), and fetch the value at that key\n\n        keys.forEach(function (key, keyIndex) {\n          matches.push.apply(matches, _toConsumableArray(_this2._findMatches({\n            key: key,\n            value: item[keyIndex],\n            searcher: searcher\n          })));\n        });\n\n        if (matches.length) {\n          results.push({\n            idx: idx,\n            item: item,\n            matches: matches\n          });\n        }\n      });\n      return results;\n    }\n  }, {\n    key: \"_findMatches\",\n    value: function _findMatches(_ref6) {\n      var key = _ref6.key,\n          value = _ref6.value,\n          searcher = _ref6.searcher;\n\n      if (!isDefined(value)) {\n        return [];\n      }\n\n      var matches = [];\n\n      if (isArray(value)) {\n        value.forEach(function (_ref7) {\n          var text = _ref7.v,\n              idx = _ref7.i,\n              norm = _ref7.n;\n\n          if (!isDefined(text)) {\n            return;\n          }\n\n          var _searcher$searchIn2 = searcher.searchIn(text),\n              isMatch = _searcher$searchIn2.isMatch,\n              score = _searcher$searchIn2.score,\n              indices = _searcher$searchIn2.indices;\n\n          if (isMatch) {\n            matches.push({\n              score: score,\n              key: key,\n              value: text,\n              idx: idx,\n              norm: norm,\n              indices: indices\n            });\n          }\n        });\n      } else {\n        var text = value.v,\n            norm = value.n;\n\n        var _searcher$searchIn3 = searcher.searchIn(text),\n            isMatch = _searcher$searchIn3.isMatch,\n            score = _searcher$searchIn3.score,\n            indices = _searcher$searchIn3.indices;\n\n        if (isMatch) {\n          matches.push({\n            score: score,\n            key: key,\n            value: text,\n            norm: norm,\n            indices: indices\n          });\n        }\n      }\n\n      return matches;\n    }\n  }]);\n\n  return Fuse;\n}();\n\nFuse$1.version = '6.6.2';\nFuse$1.createIndex = createIndex;\nFuse$1.parseIndex = parseIndex;\nFuse$1.config = Config;\n\n{\n  Fuse$1.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nvar Fuse = Fuse$1;\n\nmodule.exports = Fuse;\n", "import fs from 'fs'\nimport Fuse from 'fuse.js'\nimport {\n  CreatePagesArgs,\n  CreateSchemaCustomizationArgs,\n  NodeInput,\n} from 'gatsby'\nimport path from 'path'\n\ninterface PluginOptions {\n  query: string\n  keys: string[]\n  normalizer: (input: {\n    data?: unknown\n    errors?: unknown\n  }) => Record<string, unknown>[]\n}\n\nconst msg = (str: string) => `[gatsby-plugin-fusejs] ${str}`\n\nexport const createPages = async (\n  ctx: CreatePagesArgs,\n  opts: PluginOptions\n) => {\n  const { query, keys, normalizer } = opts\n  const { actions, graphql, reporter, createNodeId, createContentDigest } = ctx\n\n  const result = await graphql(query)\n\n  if (result.errors) {\n    reporter.error(\n      msg(\n        'The provided GraphQL query contains errors. The index will not be created.'\n      ),\n      result.errors[0]\n    )\n    return\n  }\n\n  const data = normalizer(result) || []\n\n  if (!data.length) {\n    reporter.warn(\n      msg(\n        `The query for index returned no nodes. The index and store will be empty.`\n      )\n    )\n    return\n  }\n\n  const index = Fuse.createIndex(keys, data)\n\n  actions.createNode({\n    id: createNodeId(`fusejs`),\n    index: JSON.stringify(index.toJSON()),\n    data,\n    internal: {\n      type: `fusejs`,\n      contentDigest: createContentDigest({ index, data }),\n    },\n  })\n}\n\ninterface FuseNodeInput extends NodeInput {\n  index: string\n  data: unknown\n}\n\nexport const createSchemaCustomization = async (\n  ctx: CreateSchemaCustomizationArgs\n) => {\n  const { actions, schema, reporter, pathPrefix } = ctx\n  const { createTypes } = actions\n\n  createTypes([\n    schema.buildObjectType({\n      name: 'fusejs',\n      fields: {\n        index: {\n          type: 'String!',\n          description:\n            'The JSON serialized search index string created using the fusejs.',\n        },\n        data: {\n          type: 'JSON!',\n          description: 'The data returned by the GraphQL query.',\n        },\n        publicUrl: {\n          type: 'String!',\n          description: 'The public URL of the search index and data.',\n          resolve: (node: FuseNodeInput) => {\n            const filename = `${node.internal.contentDigest}.index.json`\n\n            const publicPath = path.join(\n              process.cwd(),\n              'public',\n              'static',\n              filename\n            )\n\n            if (!fs.existsSync(publicPath))\n              fs.writeFile(\n                publicPath,\n                JSON.stringify({ index: node.index, data: node.data }),\n                (err) => {\n                  if (err)\n                    reporter.error(\n                      msg(\n                        `Could not save the index for \"${name}\" to ${publicPath}`\n                      )\n                    )\n                }\n              )\n\n            return `${pathPrefix}/static/${filename}`\n          },\n        },\n      },\n      interfaces: ['Node'],\n    }),\n  ])\n}\n"],
  "mappings": "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",
  "names": ["module", "obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY", "PATTERN_LENGTH_TOO_LARGE", "MISSING_KEY_PROPERTY", "name", "INVALID_KEY_WEIGHT_VALUE", "KeyStore", "get", "path", "deepGet", "norm", "FuseIndex", "subRecord", "BitapSearch", "addChunk", "pattern", "startIndex", "BaseMatch", "search", "ExactMatch", "InverseExactMatch", "PrefixExactMatch", "InversePrefixExactMatch", "SuffixExactMatch", "InverseSuffixExactMatch", "FuzzyMatch", "IncludeMatch", "item", "ExtendedSearch", "searchers", "isExpression", "isPath", "isLeaf", "convertToExplicit", "next", "query", "key", "Fuse", "evaluate", "text", "isMatch", "score", "indices", "Fuse", "path", "fs"]
}
